
name: Build and publish

on:
  push:
    branches:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: nelonoel/branch-name@v1
    - name: Prepare
      id: prepare
      run: |
        DOCKER_IMAGE=tinyangrykitten/syslog-to-mqtt
        DOCKER_PLATFORMS=linux/arm64
        VERSION=latest
        TAGS="--tag ${DOCKER_IMAGE}:${VERSION} --tag ${DOCKER_IMAGE}:${GITHUB_RUN_NUMBER}"
        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
          --build-arg VERSION=${VERSION} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=${GITHUB_SHA::8} \
          ${TAGS} --file ./Dockerfile ./
    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
    - name: Docker Buildx (build)
      run: |
        docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
    - name: Docker Login
      if: success()
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
    - name: send message
      if: success()
      uses: appleboy/discord-action@master
      with:
        webhook_id: ${{ secrets.WEBHOOK_ID }}
        webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
        message: Docker image tinyangrykitten/syslog-to-mqtt has been pushed to docker hub.
        username: "Builder bot"
